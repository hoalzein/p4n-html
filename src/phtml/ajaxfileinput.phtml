<div
        class="<?= $this->wrapper_class ?>"
        data-file-upload-id="<?= $this->fileUploadId ?>"
        data-on-document-ready="initAjaxFileUploadEvents">

    <div class="loading">
        <span class="loading-icon material-icons">autorenew</span>
    </div>

    <input type="file"
           value="<?= $this->value; ?>"
           placeholder="<?= $this->placeholder ?>"
           name="<?= $this->name ?>"
        <?= $this->getUploadFileCountAvailable() > 1 ? 'multiple=""' : '' ?>
        <?= $this->customAttr ?>
    >
    <label class="active"><?= $this->label ?><?= ($this->required == true ? ' *' : '') ?></label>

    <?php if ($this->getUploadFileCountAvailable() > 0) { ?>
        <div class="drop-zone">
            <div class="drop-zone-info">
                <div class="drop-zone-info-icon material-icons">cloud_upload</div>
                <div class="drop-zone-info-text">Dateien hierhin ziehen oder klicken</div>

                <div class="file-rules">
                    <span class="file-max-count">max. <?= $this->ajaxFileUploadController->getMaxFileCount() ?> Datei(en)</span>
                    <span class="file-max-size">je max. <?= AjaxFileUpload_Controller::formatFileSize($this->ajaxFileUploadController->getMaxSingleFileSize()) ?></span>
                    <span class="file-allowed-types">
                    (<?php
                            foreach ($this->ajaxFileUploadController->getAllowedFileTypeList() as $fileType) {
                            ?>
                            <span>*.<?= $fileType ?></span>
                            <?
                        }
                        ?>)
                </span>
                </div>

            </div>
        </div>
    <?php } ?>


    <?php if (count($this->uploadErrorList) > 0) {
        $errorList = [];
        foreach ($this->uploadErrorList as $error) {
            switch ($error) {
                case 'ERROR_FILE_LIMIT_REACHED':
                    $errorList[] = 'maximale Anzahl Dateien erreicht';
                    break;
                case 'ERROR_FILE_COUNT':
                    $errorList[] = 'zu viele Datein ausgewählt';
                    break;
                case 'ERROR_FILE_TYPE':
                    $errorList[] = 'Datei-Typ ist nicht erlaubt';
                    break;
                case 'ERROR_FILE_SIZE':
                    $errorList[] = 'Datei ist zu groß';
                    break;
                case 'ERROR_FILE_UPLOAD':
                    $errorList[] = 'Fehler beim Hochladen';
                    break;
            }
        }
        ?>
        <div class="error-message">
            <ul>
                <?php
                foreach ($errorList as $errorText) {
                    ?>
                    <li>
                        <span class="material-icons">navigate_next</span>
                        <span><?= $errorText ?></span>
                    </li>
                    <?php
                }
                ?>
            </ul>
        </div>
    <?php } ?>


    <ul class="file-list">
        <?php

        foreach ($this->existingFileDataList as $fileData) {
            ?>
            <li class="file-list-item">
                <div class="file-details">
                    <div class="file-type"><?= pathinfo($fileData['name'], PATHINFO_EXTENSION) ?></div>
                    <div class="file-name"><?= $fileData['name'] ?></div>
                    <div class="file-size"><?= AjaxFileUpload_Controller::formatFileSize($fileData['size']) ?></div>
                </div>
                <div class="file-action">
                    <?php
                    $downloadButton = new Template_IconButton('', $fileData['url'], 'cloud_download','','','sm', 'grey');
                    $downloadButton->addCustomAttr('download', '');
                    echo $downloadButton->getHtml();

                    $removeButton = new Template_IconButton('', '', 'delete_forever','','','sm','grey');
                    $removeButton->addCustomAttr('data-remove-file', $fileData['name']);
                    echo $removeButton->getHtml();
                    ?>
                </div>
            </li>
            <?
        }
        ?>
    </ul>

</div>